import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline
from sklearn import metrics
import joblib  # Import joblib for saving the model

# Load the data
df = pd.read_csv('data.csv')

# Check the first few rows to understand the structure
print(df.head())

# Define features and target
X = df['headlines']
y = df['target']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a pipeline that combines a CountVectorizer with a MultinomialNB classifier
pipeline = Pipeline([
    ('vect', CountVectorizer()),  # Converts text to a matrix of token counts
    ('clf', MultinomialNB())      # Naive Bayes classifier for multinomial models
])

# Train the model
pipeline.fit(X_train, y_train)

# Make predictions
y_pred = pipeline.predict(X_test)

# Evaluate the model
accuracy = metrics.accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')
print('Classification Report:')
print(metrics.classification_report(y_test, y_pred))
print('Confusion Matrix:')
print(metrics.confusion_matrix(y_test, y_pred))

# Save the model
joblib.dump(pipeline, 'sarcasm_detect.joblib')